services:
  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - paste-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: '4096M'
    command: ["redis-server", "--maxmemory", "3072mb", "--maxmemory-policy", "allkeys-lru", "--maxclients", "15000"]

  view-celery:
    build:
      context: ./view-service
      dockerfile: Dockerfile
    command: celery -A app.celery_app worker --loglevel=info --concurrency=8
    volumes:
      - ./view-service:/app
    environment:
      - DATABASE_URL=mysql+mysqlconnector://view_user:view_pass@view-db:3306/view_db
      - PASTE_SERVICE_URL=http://view-haproxy:80
      - ANALYTIC_SERVICE_URL=http://analytics-service:5003
      - C_FORCE_ROOT=true
    depends_on:
      redis:
        condition: service_healthy
      view-db:
        condition: service_healthy
      analytics-service:
        condition: service_started
    networks:
      - paste-network
    healthcheck:
      test: ["CMD", "celery", "-A", "app.celery_app", "inspect", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '512M'

  view-service:
    build:
      context: ./view-service
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=mysql+mysqlconnector://view_user:view_pass@view-db:3306/view_db
      - PASTE_SERVICE_URL=http://view-haproxy:80
      - ANALYTIC_SERVICE_URL=http://analytics-service:5003
    depends_on:
      view-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      analytics-service:
        condition: service_started
    networks:
      - paste-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 4
      resources:
        limits:
          cpus: '2.0'
          memory: '4096M'

  view-haproxy:
    build:
      context: ./haproxy-view
      dockerfile: Dockerfile
    container_name: view-haproxy
    ports:
      - "5002:80"
    depends_on:
      - view-service
    networks:
      - paste-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: '1024M'

  view-db:
    image: mysql:8.0
    container_name: view-db
    restart: always
    environment:
      MYSQL_DATABASE: view_db
      MYSQL_USER: view_user
      MYSQL_PASSWORD: view_pass
      MYSQL_ROOT_PASSWORD: rootpass
    volumes:
      - view-db-data:/var/lib/mysql
      - ./view-db/my.cnf:/etc/mysql/my.cnf
      - ./view-db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3307:3306"
    networks:
      - paste-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "view_user", "-pview_pass"]
      interval: 10s
      timeout: 5s
      retries: 3

  analytics-service:
    build:
      context: ./analytics-service
      dockerfile: Dockerfile
    container_name: analytics-service
    ports:
      - "5003:5003"
    volumes:
      - ./analytics-service:/app
    environment:
      - DATABASE_URL=mysql+mysqlconnector://analytics_user:analytics_pass@analytics-db/analytics_db
      - VIEW_SERVICE_URL=http://view-haproxy:80
    depends_on:
      - analytics-db
    networks:
      - paste-network

  analytics-db:
    image: mysql:8.0
    container_name: analytics-db
    restart: always
    environment:
      MYSQL_DATABASE: analytics_db
      MYSQL_USER: analytics_user
      MYSQL_PASSWORD: analytics_pass
      MYSQL_ROOT_PASSWORD: rootpass
    volumes:
      - analytics-db-data:/var/lib/mysql
    ports:
      - "3308:3306"
    networks:
      - paste-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "analytics_user", "-panalytics_pass"]
      interval: 10s
      timeout: 5s
      retries: 3

  paste-service:
    build:
      context: ./paste-service
      dockerfile: Dockerfile
    volumes:
      - ./paste-service:/app
    environment:
      - DATABASE_URL=mysql+mysqlconnector://paste_user:paste_pass@paste-db:3306/paste_db
      - VIEW_SERVICE_URL=http://view-haproxy:80
    depends_on:
      paste-db:
        condition: service_healthy
    networks:
      - paste-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      replicas: 4
      resources:
        limits:
          cpus: '2.0'
          memory: '4096M'

  paste-haproxy:
    build:
      context: ./haproxy_paste
      dockerfile: Dockerfile
    container_name: paste_haproxy
    ports:
      - "5000:80"
    volumes:
      - ./haproxy_paste/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    depends_on:
      - paste-service
    networks:
      - paste-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/stats"]
      interval: 10s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: '1024M'

  paste-db:
    image: mysql:8.0
    container_name: paste-db
    restart: always
    environment:
      MYSQL_DATABASE: paste_db
      MYSQL_USER: paste_user
      MYSQL_PASSWORD: paste_pass
      MYSQL_ROOT_PASSWORD: rootpass
    ports:
      - "3309:3306"
    volumes:
      - paste-db-data:/var/lib/mysql
      - ./paste-db/my.cnf:/etc/mysql/my.cnf
    networks:
      - paste-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "paste_user", "-ppaste_pass"]
      interval: 10s
      timeout: 5s
      retries: 3

  cleanup-service:
    build:
      context: ./cleanup-service
      dockerfile: Dockerfile
    container_name: cleanup-service
    volumes:
      - ./cleanup-service:/app
    environment:
      VIEW_SERVICE_URL: http://view-haproxy:80
      ANALYTIC_SERVICE_URL: http://analytics-service:5003
      REQUEST_TIMEOUT: 5
      CLEANUP_INTERVAL: 3600
    depends_on:
      - view-haproxy
      - analytics-service
    networks:
      - paste-network

  locust-master:
    build:
      context: .
      dockerfile: locust/Dockerfile
    container_name: locust-master
    ports:
      - "5089:8089"
    volumes:
      - ./locust:/app
    environment:
      - LOCUST_MODE=master
      - LOCUST_LOGLEVEL=INFO
    command: ["locust", "-f", "locustfile.py", "--master", "--host=http://view-haproxy:80", "--web-host=0.0.0.0", "--web-port=8089"]
    networks:
      - paste-network
    depends_on:
      - paste-service
      - view-haproxy
      - analytics-service
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: '1024M'

  locust-worker:
    build:
      context: .
      dockerfile: locust/Dockerfile
    volumes:
      - ./locust:/app
    environment:
      - LOCUST_MODE=worker
      - LOCUST_LOGLEVEL=INFO
    command: ["locust", "-f", "locustfile.py", "--worker", "--master-host=locust-master"]
    networks:
      - paste-network
    depends_on:
      - locust-master
    deploy:
      replicas: 8
      resources:
        limits:
          cpus: '1.0'
          memory: '1024M'

volumes:
  view-db-data:
  analytics-db-data:
  paste-db-data:
  redis-data:

networks:
  paste-network:
    driver: bridge

services:
  # ----------------- View Service -----------------
  view-service:
    build:
      context: ./view-service
      dockerfile: Dockerfile
    container_name: view-service
    ports:
      - "5002:5002"
    # ðŸ”¥ REMOVE this line to avoid volume override
    # volumes:
    #   - ./view-service:/app
    environment:
      DATABASE_URL: mysql+mysqlconnector://view_user:view_pass@view-db/view_db
      PASTE_SERVICE_URL: http://paste-service:5000
      ANALYTIC_SERVICE_URL: http://analytics-service:5003
    depends_on:
      view-db:
        condition: service_healthy
      analytics-service:
        condition: service_started
    networks:
      - paste-network

  view-db:
    image: mysql:8.0
    container_name: view-db
    restart: always
    environment:
      MYSQL_DATABASE: view_db
      MYSQL_USER: view_user
      MYSQL_PASSWORD: view_pass
      MYSQL_ROOT_PASSWORD: rootpass
    volumes:
      - view-db-data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - paste-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "view_user", "-pview_pass"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # ----------------- Analytics Service -----------------
  analytics-service:
    build:
      context: ./analytics-service
      dockerfile: Dockerfile
    container_name: analytics-service
    ports:
      - "5003:5003"
    volumes:
      - ./analytics-service:/app
    environment:
      - DATABASE_URL=mysql+mysqlconnector://analytics_user:analytics_pass@analytics-db/analytics_db
    depends_on:
      analytics-db:
        condition: service_healthy
    networks:
      - paste-network

  analytics-db:
    image: mysql:8.0
    container_name: analytics-db
    restart: always
    environment:
      MYSQL_DATABASE: analytics_db
      MYSQL_USER: analytics_user
      MYSQL_PASSWORD: analytics_pass
      MYSQL_ROOT_PASSWORD: rootpass
    volumes:
      - analytics-db-data:/var/lib/mysql
    ports:
      - "3308:3306"
    networks:
      - paste-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "analytics_user", "-panalytics_pass"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # ----------------- Paste Service -----------------
  paste-service:
    build:
      context: ./paste-service
      dockerfile: Dockerfile
    container_name: paste-service
    ports:
      - "5000:5000"
    volumes:
      - ./paste-service:/app
    environment:
      DB_USER: paste_user
      DB_PASS: paste_pass
      DB_HOST: paste-db
      DB_NAME: paste_db
      VIEW_SERVICE_URL: http://view-service:5002
    depends_on:
      paste-db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    networks:
      - paste-network

  paste-db:
    image: mysql:8.0
    container_name: paste-db
    restart: always
    environment:
      MYSQL_DATABASE: paste_db
      MYSQL_USER: paste_user
      MYSQL_PASSWORD: paste_pass
      MYSQL_ROOT_PASSWORD: rootpass
    ports:
      - "3309:3306"
    volumes:
      - paste-db-data:/var/lib/mysql
    networks:
      - paste-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "paste_user", "-ppaste_pass"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  # ----------------- RabbitMQ -----------------
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - paste-network

  # ----------------- Cleanup Service -----------------
  cleanup-service:
    build:
      context: ./cleanup-service
      dockerfile: Dockerfile
    container_name: cleanup-service
    volumes:
      - ./cleanup-service:/app
    environment:
      VIEW_SERVICE_URL: http://view-service:5002
      ANALYTIC_SERVICE_URL: http://analytics-service:5003
      REQUEST_TIMEOUT: 5
      CLEANUP_INTERVAL: 3600
    depends_on:
      - view-service
      - analytics-service
    networks:
      - paste-network

  # ----------------- Locust Load Testing -----------------
  locust:
    build:
      context: ./locust
      dockerfile: Dockerfile
    container_name: locust
    ports:
      - "5089:5089"
    volumes:
      - ./locust:/app
    networks:
      - paste-network
    depends_on:
      - paste-service
      - view-service
      - analytics-service

# ----------------- Volumes & Network -----------------
volumes:
  view-db-data:
  analytics-db-data:
  paste-db-data:

networks:
  paste-network:
    driver: bridge
